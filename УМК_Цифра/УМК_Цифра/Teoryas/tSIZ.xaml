<Page x:Class="УМК_Цифра.Teoryas.tSIZ"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:УМК_Цифра.Teoryas"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="tSIZ">

    <Grid>
        <ScrollViewer Grid.Row="1">
            <StackPanel Grid.Row="1">
                <TextBlock FontWeight="SemiBold" FontSize="36" > Машинное зрение </TextBlock>

                <Grid Background="#FF80D3D3" Height="10" VerticalAlignment="Bottom" Margin="10"></Grid>

                <Image Source="/УМК_Цифра;component/Resources/теория/ии и машинное.jpg" Stretch="Fill" ></Image>
               <TextBlock>Roboflow предоставляет все необходимое для преобразования изображений в информацию и позволяет использовать все инструменты, необходимые для начала использования компьютерного зрения, даже если вы не являетесь экспертом в области машинного обучения.
                Начнем с фундамента любой нейронной сети - обучающего датасета.
                Dataset – это обработанная и структурированная информация в табличном виде. Строки такой таблицы называются объектами, а столбцы – признаками. В совокупности это и есть размеченные данные, на основе которых происходит машинное обучение.
                Данные могут быть самыми разными. Например, Вы хотите проверить, соблюдают ли сотрудники технику безопасности на предприятии. Для этого нейронке нужно скормить набор данных с различными средствами индивидуальной защиты (СИЗ).
                Чтобы ИИ не тупил и понимал запросы как можно лучше - нужно очень много подробных примеров. Каждый пример - фотография рабочего, отмеченные в ней фрагменты СИЗ и надпись, что это - каска, перчатка или очки.
                Под разные задачи есть разные виды разметки данных: выделение объектов (2D и 3D), сегментация объектов и категоризация изображений.
                </TextBlock>
                <Image Source="/УМК_Цифра;component/Resources/теория/пример распознавания касок.jpg" Stretch="Fill" ></Image>
                <TextBlock>
                Вам будет предложено выбрать разделение обучения / тестирования для ваших изображений; по умолчанию 70% обучения, 20% проверки и 10% тестирования обычно оптимальны.
                Теперь вы готовы использовать свои данные для обучения пользовательской модели обнаружения объектов. Ваша обученная модель, размещенная в Roboflow, оптимизирована и готова к использованию в нескольких вариантах развертывания.                    
                </TextBlock>
                <TextBlock FontWeight="SemiBold" FontSize="36" > OpenCV</TextBlock>

                <Grid Background="#FF80D3D3" Height="10" VerticalAlignment="Bottom" Margin="10"></Grid>

                <TextBlock> OpenCV – сокращение от Open Source Computer Vision Library. Является библиотекой алгоритмов компьютерного зрения, обработки изображений, численных алгоритмов общего назначения.
                Реализована на C/C++ и очень эффективна. Свободна для академического и коммерческого использования


                </TextBlock>
                <Image Source="/УМК_Цифра;component/Resources/структура машинного зрения.jpg" Stretch="Fill" ></Image>
                <TextBlock> Датчик определил, что деталь на конвейере нужно проверить, запустил камеру и сделал снимок этой детали. После этого изображение отправляется в компьютер, где программное обеспечение для машинного зрения обрабатывает полученную картинку.
                После того, как изображение обработано, в зависимости от состояния детали программа пропускает или не пропускает деталь по конвейеру дальше. То есть, если деталь повреждена — программное обеспечение подаст сигнал устройству для её отклонения, остановит производство или предупредит человека о том, что есть деталь с дефектом.
                В данном УМК рассмотрим процесс последовательности действий, после того, как датчик запустил камеру и сделал снимок.
                </TextBlock>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
